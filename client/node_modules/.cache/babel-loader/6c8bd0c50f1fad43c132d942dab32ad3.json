{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, GET_ERRORS, CLEAR_ERRORS, GET_POSTS, GET_POST, POST_LOADING, DELETE_POST } from './types'; // Add Post\n\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post('/api/posts', postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Get Posts\n\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get('/api/posts').then(function (res) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n}; // Get Post\n\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_POST,\n        payload: null\n      });\n    });\n  };\n}; // Delete Post\n\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Like\n\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/like/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Remove Like\n\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(\"/api/posts/unlike/\".concat(id)).then(function (res) {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Add Comment\n\nexport var addComment = function addComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"/api/posts/comment/\".concat(postId), commentData).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Delete Comment\n\nexport var deleteComment = function deleteComment(postId, commentId) {\n  return function (dispatch) {\n    axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set loading state\n\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear errors\n\nexport var clearErrors = function clearErrors() {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/Users/caunicorn/Documents/everiTokenDapp/client/src/actions/postActions.js"],"names":["axios","ADD_POST","GET_ERRORS","CLEAR_ERRORS","GET_POSTS","GET_POST","POST_LOADING","DELETE_POST","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n  ADD_POST,\n  GET_ERRORS,\n  CLEAR_ERRORS,\n  GET_POSTS,\n  GET_POST,\n  POST_LOADING,\n  DELETE_POST\n} from './types';\n\n// Add Post\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post('/api/posts', postData)\n    .then(res =>\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Get Posts\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get('/api/posts')\n    .then(res =>\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_POSTS,\n        payload: null\n      })\n    );\n};\n\n// Get Post\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(`/api/posts/${id}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_POST,\n        payload: null\n      })\n    );\n};\n\n// Delete Post\nexport const deletePost = id => dispatch => {\n  axios\n    .delete(`/api/posts/${id}`)\n    .then(res =>\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Like\nexport const addLike = id => dispatch => {\n  axios\n    .post(`/api/posts/like/${id}`)\n    .then(res => dispatch(getPosts()))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Remove Like\nexport const removeLike = id => dispatch => {\n  axios\n    .post(`/api/posts/unlike/${id}`)\n    .then(res => dispatch(getPosts()))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(`/api/posts/comment/${postId}`, commentData)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios\n    .delete(`/api/posts/comment/${postId}/${commentId}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set loading state\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n"]},"metadata":{},"sourceType":"module"}