{"ast":null,"code":"var _jsxFileName = \"/Users/caunicorn/Documents/everiTokenDapp/client/src/components/common/SelectListGroup.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar SelectListGroup = function SelectListGroup(_ref) {\n  var name = _ref.name,\n      value = _ref.value,\n      error = _ref.error,\n      info = _ref.info,\n      onChange = _ref.onChange,\n      options = _ref.options;\n  var selectOptions = options.map(function (option) {\n    return React.createElement(\"option\", {\n      key: option.label,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, option.label);\n  });\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    name: name,\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, selectOptions), info && React.createElement(\"small\", {\n    className: \"form-text text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, info), error && React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, error));\n};\n\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectListGroup;","map":{"version":3,"sources":["/Users/caunicorn/Documents/everiTokenDapp/client/src/components/common/SelectListGroup.js"],"names":["React","classnames","PropTypes","SelectListGroup","name","value","error","info","onChange","options","selectOptions","map","option","label","propTypes","string","isRequired","func","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAqD;AAAA,MAAlDC,IAAkD,QAAlDA,IAAkD;AAAA,MAA5CC,KAA4C,QAA5CA,KAA4C;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC3E,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAAAC,MAAM;AAAA,WACtC;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACC,KAApB;AAA2B,MAAA,KAAK,EAAED,MAAM,CAACP,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,MAAM,CAACC,KADV,CADsC;AAAA,GAAlB,CAAtB;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEZ,UAAU,CAAC,8BAAD,EAAiC;AACpD,oBAAcK;AADsC,KAAjC,CADvB;AAIE,IAAA,IAAI,EAAEF,IAJR;AAKE,IAAA,KAAK,EAAEC,KALT;AAME,IAAA,QAAQ,EAAEG,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGE,aARH,CADF,EAWGH,IAAI,IAAI;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAzC,CAXX,EAYGD,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCA,KAAnC,CAZZ,CADF;AAgBD,CAtBD;;AAwBAH,eAAe,CAACW,SAAhB,GAA4B;AAC1BV,EAAAA,IAAI,EAAEF,SAAS,CAACa,MAAV,CAAiBC,UADG;AAE1BX,EAAAA,KAAK,EAAEH,SAAS,CAACa,MAAV,CAAiBC,UAFE;AAG1BT,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAHU;AAI1BT,EAAAA,KAAK,EAAEJ,SAAS,CAACa,MAJS;AAK1BP,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IAAV,CAAeD,UALC;AAM1BP,EAAAA,OAAO,EAAEP,SAAS,CAACgB,KAAV,CAAgBF;AANC,CAA5B;AASA,eAAeb,eAAf","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst SelectListGroup = ({ name, value, error, info, onChange, options }) => {\n  const selectOptions = options.map(option => (\n    <option key={option.label} value={option.value}>\n      {option.label}\n    </option>\n  ));\n  return (\n    <div className=\"form-group\">\n      <select\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        name={name}\n        value={value}\n        onChange={onChange}\n      >\n        {selectOptions}\n      </select>\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nSelectListGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired\n};\n\nexport default SelectListGroup;\n"]},"metadata":{},"sourceType":"module"}